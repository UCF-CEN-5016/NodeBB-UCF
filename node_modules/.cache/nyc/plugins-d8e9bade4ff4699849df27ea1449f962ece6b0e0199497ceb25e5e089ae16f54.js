'use strict';function cov_2lc85wxpqy(){var path="/home/vardhan/assignment-2/src/socket.io/plugins.js";var hash="c7b75553ddfe684a3cad76d43a17480d7bbe4051";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/vardhan/assignment-2/src/socket.io/plugins.js",statementMap:{"0":{start:{line:3,column:22},end:{line:3,column:24}},"1":{start:{line:17,column:0},end:{line:17,column:31}}},fnMap:{},branchMap:{},s:{"0":0,"1":0},f:{},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c7b75553ddfe684a3cad76d43a17480d7bbe4051"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2lc85wxpqy=function(){return actualCoverage;};}return actualCoverage;}cov_2lc85wxpqy();const SocketPlugins=(cov_2lc85wxpqy().s[0]++,{});/*
    This file is provided exclusively so that plugins can require it and add their own socket listeners.

    How? From your plugin:

        const SocketPlugins = require.main.require('./src/socket.io/plugins');
        SocketPlugins.myPlugin = {};
        SocketPlugins.myPlugin.myMethod = function(socket, data, callback) { ... };

    Be a good lad and namespace your methods.
*/cov_2lc85wxpqy().s[1]++;module.exports=SocketPlugins;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmxjODV3eHBxeSIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsImJyYW5jaE1hcCIsInMiLCJmIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJTb2NrZXRQbHVnaW5zIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbInBsdWdpbnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBTb2NrZXRQbHVnaW5zID0ge307XG5cbi8qXG4gICAgVGhpcyBmaWxlIGlzIHByb3ZpZGVkIGV4Y2x1c2l2ZWx5IHNvIHRoYXQgcGx1Z2lucyBjYW4gcmVxdWlyZSBpdCBhbmQgYWRkIHRoZWlyIG93biBzb2NrZXQgbGlzdGVuZXJzLlxuXG4gICAgSG93PyBGcm9tIHlvdXIgcGx1Z2luOlxuXG4gICAgICAgIGNvbnN0IFNvY2tldFBsdWdpbnMgPSByZXF1aXJlLm1haW4ucmVxdWlyZSgnLi9zcmMvc29ja2V0LmlvL3BsdWdpbnMnKTtcbiAgICAgICAgU29ja2V0UGx1Z2lucy5teVBsdWdpbiA9IHt9O1xuICAgICAgICBTb2NrZXRQbHVnaW5zLm15UGx1Z2luLm15TWV0aG9kID0gZnVuY3Rpb24oc29ja2V0LCBkYXRhLCBjYWxsYmFjaykgeyAuLi4gfTtcblxuICAgIEJlIGEgZ29vZCBsYWQgYW5kIG5hbWVzcGFjZSB5b3VyIG1ldGhvZHMuXG4qL1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNvY2tldFBsdWdpbnM7XG4iXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQyxTQUFBQSxlQUFBLE1BQUFDLElBQUEsMkRBQUFDLElBQUEsZ0RBQUFDLE1BQUEsS0FBQUMsUUFBQSxzQkFBQUMsR0FBQSxvQkFBQUMsWUFBQSxFQUFBTCxJQUFBLHVEQUFBTSxZQUFBLE9BQUFDLEtBQUEsRUFBQUMsSUFBQSxHQUFBQyxNQUFBLEtBQUFDLEdBQUEsRUFBQUYsSUFBQSxHQUFBQyxNQUFBLFdBQUFGLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLElBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLE9BQUFFLEtBQUEsSUFBQUMsU0FBQSxJQUFBQyxDQUFBLGVBQUFDLENBQUEsSUFBQUMsQ0FBQSxJQUFBQyxlQUFBLDRDQUFBZixJQUFBLGlEQUFBZ0IsUUFBQSxDQUFBZixNQUFBLENBQUFFLEdBQUEsSUFBQUYsTUFBQSxDQUFBRSxHQUFBLFVBQUFhLFFBQUEsQ0FBQWpCLElBQUEsR0FBQWlCLFFBQUEsQ0FBQWpCLElBQUEsRUFBQUMsSUFBQSxHQUFBQSxJQUFBLEVBQUFnQixRQUFBLENBQUFqQixJQUFBLEVBQUFLLFlBQUEsTUFBQWEsY0FBQSxDQUFBRCxRQUFBLENBQUFqQixJQUFBLEdBZUQ7QUFBQUQsY0FBQSxTQUFBQSxDQUFBLFNBQUFtQixjQUFBLFdBQUFBLGNBQUEsRUFBQW5CLGNBQUEsR0FiWixLQUFNLENBQUFvQixhQUFhLEVBQUFwQixjQUFBLEdBQUFjLENBQUEsTUFBRyxDQUFDLENBQUMsRUFFeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQVZBZCxjQUFBLEdBQUFjLENBQUEsTUFZQU8sTUFBTSxDQUFDQyxPQUFPLENBQUdGLGFBQWEifQ==