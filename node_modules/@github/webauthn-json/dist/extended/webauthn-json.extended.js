export function base64urlToBuffer(e){const t="==".slice(0,(4-e.length%4)%4),n=e.replace(/-/g,"+").replace(/_/g,"/")+t,r=atob(n),o=new ArrayBuffer(r.length),c=new Uint8Array(o);for(let e=0;e<r.length;e++)c[e]=r.charCodeAt(e);return o}export function bufferToBase64url(e){const t=new Uint8Array(e);let n="";for(const e of t)n+=String.fromCharCode(e);return btoa(n).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}export function convert(e,t,n){if("copy"===t)return n;if("convert"===t)return e(n);if(t instanceof Array)return n.map((n=>convert(e,t[0],n)));if(t instanceof Object){const r={};for(const[o,c]of Object.entries(t))if(o in n)null!=n[o]?r[o]=convert(e,c.schema,n[o]):r[o]=null;else if(c.required)throw new Error("Missing key: "+o);return r}}function e(e){return{required:!0,schema:e}}function t(e){return{required:!1,schema:e}}const n={type:e("copy"),id:e("convert"),transports:t("copy")},r={appid:t("copy"),appidExclude:t("copy"),credProps:t("copy")},o={appid:t("copy"),appidExclude:t("copy"),credProps:t("copy")},c={publicKey:e({rp:e("copy"),user:e({id:e("convert"),name:e("copy"),displayName:e("copy")}),challenge:e("convert"),pubKeyCredParams:e("copy"),timeout:t("copy"),excludeCredentials:t([n]),authenticatorSelection:t("copy"),attestation:t("copy"),extensions:t(r)}),signal:t("copy")},s={type:e("copy"),id:e("copy"),rawId:e("convert"),response:e({clientDataJSON:e("convert"),attestationObject:e("convert")}),clientExtensionResults:e(o)},i={mediation:t("copy"),publicKey:e({challenge:e("convert"),timeout:t("copy"),rpId:t("copy"),allowCredentials:t([n]),userVerification:t("copy"),extensions:t(r)}),signal:t("copy")},a={type:e("copy"),id:e("copy"),rawId:e("convert"),response:e({clientDataJSON:e("convert"),authenticatorData:e("convert"),signature:e("convert"),userHandle:e("convert")}),clientExtensionResults:e(o)};export const schema={credentialCreationOptions:c,publicKeyCredentialWithAttestation:s,credentialRequestOptions:i,publicKeyCredentialWithAssertion:a};export function createRequestFromJSON(e){return convert(base64urlToBuffer,c,e)}export function createResponseToJSON(e){const t=e;return t.clientExtensionResults=e.getClientExtensionResults(),convert(bufferToBase64url,s,t)}export async function create(e){return createResponseToJSON(await navigator.credentials.create(createRequestFromJSON(e)))}export function getRequestFromJSON(e){return convert(base64urlToBuffer,i,e)}export function getResponseToJSON(e){const t=e;return t.clientExtensionResults=e.getClientExtensionResults(),convert(bufferToBase64url,a,t)}export async function get(e){return getResponseToJSON(await navigator.credentials.get(getRequestFromJSON(e)))}export function supported(){return!!(navigator.credentials&&navigator.credentials.create&&navigator.credentials.get&&window.PublicKeyCredential)}const p={appid:t("copy"),appidExclude:t("copy"),uvm:t("copy"),credProps:t("copy"),largeBlob:t({support:t("copy"),read:t("copy"),write:t("convert")})},u={appid:t("copy"),appidExclude:t("copy"),uvm:t("copy"),credProps:t("copy"),largeBlob:t({supported:t("copy"),blob:t("convert"),written:t("copy")})},l=JSON.parse(JSON.stringify(c));l.publicKey.schema.extensions=t(p);const d=JSON.parse(JSON.stringify(s));d.clientExtensionResults=e(u);const y=JSON.parse(JSON.stringify(i));y.publicKey.schema.extensions=t(p);const f=JSON.parse(JSON.stringify(a));f.clientExtensionResults=e(u);export function createExtendedRequestFromJSON(e){return convert(base64urlToBuffer,l,e)}export function createExtendedResponseToJSON(e){const t=e;return t.clientExtensionResults=e.getClientExtensionResults(),convert(bufferToBase64url,d,t)}export async function createExtended(e){return createExtendedResponseToJSON(await navigator.credentials.create(createExtendedRequestFromJSON(e)))}export function getExtendedRequestFromJSON(e){return convert(base64urlToBuffer,y,e)}export function getExtendedResponseToJSON(e){const t=e;return t.clientExtensionResults=e.getClientExtensionResults(),convert(bufferToBase64url,f,t)}export async function getExtended(e){return getExtendedResponseToJSON(await navigator.credentials.get(getExtendedRequestFromJSON(e)))}
//# sourceMappingURL=webauthn-json.extended.js.map
